Link: https://leetcode.com/problems/merge-k-sorted-lists/

class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists.length < 2) {
            if(lists.length == 0) {
                return null;
            }
            return lists[0];
        }
        ListNode combList = combineLists(lists[0],lists[1]);
        for(int i = 3; i < lists.length; i+=2) {
            ListNode combList2 = combineLists(lists[i],lists[i-1]);
            combList = combineLists(combList,combList2);
        }
        if(lists.length % 2  == 1) {
            combList = combineLists(combList,lists[lists.length - 1]);
        }
        return combList;
    }
    public ListNode combineLists(ListNode l1, ListNode l2) {
        ListNode l3;
        if(l1 == null) {
            return l2;
        }
        if(l2 == null) {
            return l1;
        }
        if(l1.val < l2.val) {
            l3 = new ListNode(l1.val);
            l1 = l1.next;
        } else {
            l3 = new ListNode(l2.val);
            l2 = l2.next;
        }
        ListNode head = l3;
        int count = 0;
        while(l1 != null && l2 != null) {
            if(l1.val < l2.val) {
                l3.next = l1;
                l3 = l3.next;
                l1 = l1.next;
            } else {
                l3.next = l2;
                l3 = l3.next;
                l2 = l2.next;
            }
        }
        if(l1 != null) {
            l3.next = l1;
        } else if(l2 != null) {
            l3.next = l2; 
        }
        return head;
    }
}
