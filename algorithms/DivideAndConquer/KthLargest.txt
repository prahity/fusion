https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/

class Solution {
public:
    string kthLargestNumber(vector<string>& nums, int k) {
        k = nums.size() - k;
        return kthLargest(nums,k,0,nums.size() - 1);
        
    }
    string kthLargest(vector<string>& nums, int k, int start,int end) {
        if(start >= end) {
            return nums[end];
        }
        int split = partition(nums,start, end,start + rand() % (end - start));
         if(split == k + start) {
            return nums[split];
        }
        if(split < k + start) {
            return kthLargest(nums,k + start - split - 1,split + 1,end);
        }
        return kthLargest(nums,k,start,split - 1);
    }
    int partition(vector<string>& arr, int start,int end,int pos) {
        string temp = arr[start];
        arr[start] = arr[pos];
        arr[pos] = temp;
        int split = start + 1;
        for(int i = start + 1; i <= end; i++) {
            if(compare(arr[start],arr[i])) {
                temp = arr[split];
                arr[split] = arr[i];
                arr[i] = temp;
                split++;
            }
        }
        temp = arr[split - 1];
        arr[split - 1] = arr[start];
        arr[start] = temp;
        return split - 1;

    } 
    bool compare(string& a, string& b) {
        if(a.size() != b.size()){
            return a.size() > b.size();
        }
        for(int i = 0; i < a.size(); i++) {
            if(a[i] != b[i]) {
                return (a[i] - '0') > (b[i] - '0');
            } 
        }
        return rand() % 2;
    }
};
